<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:db.properties" />
    <context:component-scan base-package="com.jack.transcation"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 pcUrl、user、password -->
        <property name="url" value="jdbc:mysql://172.31.0.68:3306/who_bi_recommend?useUnicode=true"/>
        <property name="username" value="test_update"/>
        <property name="password" value="l8ka65"/>
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="2"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="-1"/>
        <property name="filters" value="wall"/>
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
                <ref bean="log-filter"/>
            </list>
        </property>
    </bean>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="3000"/>
        <property name="logSlowSql" value="true"/>
    </bean>

    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4j2Filter">
        <property name="resultSetLogEnabled" value="false"/>
        <property name="statementLogEnabled" value="false"/>
        <property name="statementExecutableSqlLogEnable" value="true"/>
        <property name="statementSqlPrettyFormat" value="true"/>
        <!--<property name="statementExecuteAfterLogEnabled" value="false"/>-->
        <!--<property name="statementPrepareAfterLogEnabled" value="false"/>-->
        <!--<property name="statementPrepareCallAfterLogEnabled" value="false"/>-->
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="edit*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>


    <aop:config>
        <aop:pointcut id="allServiceMethod" expression="execution(* com.jack.transcation..*.*(..))"/>
        <aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice"/>
    </aop:config>

    <!--参考代码-->
    <!--<bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"-->
          <!--abstract="true">-->
        <!--<property name="transactionManager" ref="transactionManager"/>-->
        <!--<property name="transactionAttributes">-->
            <!--<props>-->
                <!--<prop key="insert*">PROPAGATION_REQUIRED</prop>-->
                <!--<prop key="update*">PROPAGATION_REQUIRED</prop>-->
                <!--<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="myProxy" parent="baseTransactionProxy">-->
        <!--<property name="target" ref="myTarget"/>-->
    <!--</bean>-->

    <!--<bean id="yourProxy" parent="baseTransactionProxy">-->
        <!--<property name="target" ref="yourTarget"/>-->
    <!--</bean>-->

    <!--以上为参考代码-->






</beans>
